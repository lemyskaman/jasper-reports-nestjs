# Development Dockerfile with JasperReports dependencies
FROM openjdk:17-slim

# Install Node.js and development tools
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Download JasperReports JAR files
RUN mkdir -p /app/jasperreports-libs
WORKDIR /app/jasperreports-libs

# Download JasperReports dependencies
RUN wget https://repo1.maven.org/maven2/net/sf/jasperreports/jasperreports/6.20.0/jasperreports-6.20.0.jar
RUN wget https://repo1.maven.org/maven2/net/sf/jasperreports/jasperreports-functions/6.20.0/jasperreports-functions-6.20.0.jar
RUN wget https://repo1.maven.org/maven2/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4.jar
RUN wget https://repo1.maven.org/maven2/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar
RUN wget https://repo1.maven.org/maven2/commons-digester/commons-digester/2.1/commons-digester-2.1.jar
RUN wget https://repo1.maven.org/maven2/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar
RUN wget https://repo1.maven.org/maven2/com/lowagie/itext/2.1.7.js8/itext-2.1.7.js8.jar

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci

# Create directories
RUN mkdir -p uploads reports

# Set Java environment
ENV JAVA_HOME=/opt/java/openjdk
ENV PATH="${JAVA_HOME}/bin:${PATH}"
ENV JASPER_LIBS_PATH=/app/jasperreports-libs
ENV JASPER_ENGINE_DIR=/app/jasper-engine
ENV UPLOAD_DIR=/app/uploads

# Copy source code
COPY . .

# Expose ports (API and Debug)
EXPOSE 3000 9229

# Command to run the application in debug mode
CMD ["npm", "run", "start:debug"]